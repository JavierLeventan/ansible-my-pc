---
- name: makepkg | Install mold
  become: true
  ansible.builtin.package:
    name: mold
    state: present

- name: makepkg | Gcc compiler optimizations replace words
  become: true
  ansible.builtin.replace:
    path: /etc/makepkg.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
    backup: true
  loop:
    - { regexp: '^(OPTIONS=.*) debug(.*)$', replace: '\1 !debug\2' }
    - { regexp: '^(OPTIONS=.*) lto(.*)$', replace: '\1 !lto\2' }
    - { regexp: '^(CFLAGS=[\s\S]*)-march=\S*\s([\s\S]*\")$', replace: '\1-march=native \2' }
    - { regexp: '^(CFLAGS=[\s\S]*)-mtune=\S*\s([\s\S]*\")', replace: '\1\2' }
    - { regexp: '(^LDFLAGS=[\s\S]*)pack-relative-relocs"', replace: '\1pack-relative-relocs,-fuse-ld=mold"' }

- name: makepkg | Gcc compiler optimizatiosn replace line
  become: true
  ansible.builtin.lineinfile:
    path: /etc/makepkg.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.replace }}"
    backup: true
  loop:
    - { regexp: '^MAKEFLAGS=', replace: 'MAKEFLAGS="-j$(nproc)"' }
    - { regexp: '^PKGEXT=', replace: "PKGEXT='.pkg.tar'" }

- name: makepkg | Rust compiler optimizations
  become: true
  ansible.builtin.lineinfile:
    path: /etc/makepkg.conf.d/rust.conf
    regexp: "^RUSTFLAGS="
    line: 'RUSTFLAGS="-C opt-level=2 -C force-frame-pointers=yes -C target-cpu=native -C link-arg=-fuse-ld=mold"'
    backup: true
